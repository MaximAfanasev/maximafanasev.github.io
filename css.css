/*ВЛОЖЕННОСТЬ*/
* {}           									 								/* всем */
.class {}      									 								/* с классом */
#id {}         									 								/* с идентификатором */
								
div p {}       									 								/* все p внутри div */
div > p {}     									 								/* p потомки div */
div + p {}     									 								/* p сразу после div */
div ~ p {}     									 								/* все p после div */
a[title] {}    									 								/* все <a>, у которых есть атрибут title */

:first-child {}                  /* первый дочерний элемент внутри родителя */  
:last-child {}                   /* последний дочерний элемент внутри родителя */  
:first-of-type {}                /* первый элемент определённого типа среди братьев */  
:last-of-type {}                 /* последний элемент определённого типа среди братьев */  
:only-child {}                   /* элемент, который является единственным ребёнком своего родителя */  
:only-of-type {}                 /* элемент, который является единственным своего типа среди братьев */

:nth-child(2) {}                 /* второй дочерний элемент родителя */  
:nth-child(odd) {}               /* 1 3 5 */  
:nth-child(even) {}              /* 2 4 6 */  
:nth-child(3n+1) {}              /* 1,4,7 */  
:nth-last-child(2) {}            /* предпоследний дочерний элемент */  
:nth-of-type(2) {}               /* второй элемент определённого типа */  
:nth-last-of-type(2) {}          /* предпоследний элемент определённого типа */  
:not(.ignore) {}                 /* все элементы, у которых нет класса 'ignore' */  
div:not(#banner) {}              /* все `<div>`, кроме тех, у которых есть id 'banner' */  
li:not(:first-child) {}          /* все `<li>`, кроме первого ребенка в списке */  
:empty {}                        /* элементы без содержимого (без текста и детей) */  
:root {}                         /* корневой элемент документа (обычно `<html>`) */

/*ПАТТЕРНЫ*/
a[href="https://"] {}   				 /* href точно равен */
a[href^="https"] {}     				 /* Начинается с div[class^="icon-"] {}*/
a[href$=".pdf"] {}      				 /* Заканчивается на div[class$="-btn"] {}*/
a[href*="example"] {}   				 /* Содержит div[class*="error"] {}*/

/*ФОРМА*/
:checked {}     								 /* которые отмечены */  
:disabled {}    								 /* которые отключены и недоступны для взаимодействия */  
:enabled {}     								 /* которые доступны для взаимодействия */  
:required {}    								 /* заполнения элементы формы */  
:optional {}    								 /* для заполнения элементы формы */  
:valid {}       								 /* с валидным содержимым */  
:invalid {}     								 /* с некорректным содержимым */  
:in-range {}    								 /* с значением в допустимом диапазоне (например, input type=range или number) */  
:out-of-range {}      					 /* с значением вне допустимого диапазона */  
:placeholder-shown {} 					 /* оторых отображается плейсхолдер */  
:read-only {}         					 /*  которые доступны только для чтения */  
:read-write {}        					 /*  которые доступны для редактирования */
::placeholder {}      					 /* стилизует текст плейсхолдера в полях формы */

/*              ССЫЛКА               */
:link {}                /* еще не были посещены */
:visited {}             /* уже посетил */
:hover {}               /* когда наводит курсор мыши на элемент */
:active {}              /* при нажатии */
:focus {}               /* при навигации с клавиатуры */
:focus-visible {}       /* элемент в фокусе и это видно пользователю */
:focus-within {}        /* внутри которых есть элемент с фокусом */
:target {}              /* является текущей целью URL после перехода по якорю */

/*              ПСЕВДО               */
::before {
	content: "";
} /* добавляет содержимое перед элементом, используется для стилизации псевдоэлемента ::before */  
::after {
	content: "";
} /* добавляет содержимое после элемента, используется для стилизации псевдоэлемента ::after */  

/*              БУКВЫ СТРОКИ               */
::first-letter {} /* выбирает первую букву внутри элемента для стилизации */  
::first-line {} /* выбирает первую строку внутри элемента для стилизации */  
::selection {} /* стилизует выделенный текст пользователем */  
::marker {} /* выбирает маркеры списков (например, точки или номера) */

.a {
/*              ПОЗИЦИОНИРОВАНИЕ               */
	position: static; /* Значение по умолчанию. Элемент располагается в нормальном потоке документа. */
	position: relative; /* Позволяет смещать элемент относительно его исходного положения, сохраняя место в потоке. */
	position: absolute; /* Располагает элемент относительно ближайшего позиционированного предка (с отличным от static position). */
	position: fixed; /* Фиксирует элемент относительно окна браузера; он остается на месте при прокрутке страницы. */
	position: sticky; /* Позволяет элементу вести себя как `relative` до тех пор, пока не достигнет заданного порога, после чего — как `fixed`. */
	
	top: 0; /* Смещает элемент вверх относительно его позиционирования (например, при position: absolute или fixed). */
	right: 0; /* Смещает элемент вправо. */
	bottom: 0; /* Смещает элемент вниз. */
	left: 0; /* Смещает элемент влево. */
	z-index: 10; /* Определяет порядок наложения элементов; чем больше значение, тем выше слой. */

/*              РАЗМЕРЫ              */
	width: 100px; /* Устанавливает фиксированную ширину элемента в 100 пикселей. */
	height: 100px; /* Устанавливает фиксированную высоту в 100 пикселей. */

	min-width: 50px; /* Минимальная ширина элемента — не меньше 50 пикселей. */
	max-width: 200px; /* Максимальная ширина — не больше 200 пикселей. */
	min-height: 50px; /* Минимальная высота — не меньше 50 пикселей. */
	max-height: 200px; /* Максимальная высота — не больше 200 пикселей. */

/*              ОТСТУПЫ               */
	margin: 10px; /* Внешний отступ со всех сторон по 10 пикселей. */
	margin-top: 10px; /* Внешний отступ сверху. */
	margin-right: 10px; /* Внешний отступ справа. */
	margin-bottom: 10px; /* Внешний отступ снизу. */
	margin-left: 10px; /* Внешний отступ слева. */

	padding: 10px; /* Внутренний отступ со всех сторон по 10 пикселей. */
	padding-top: 10px; /* Внутренний отступ сверху. */
	padding-right: 10px; /* Внутренний отступ справа. */
	padding-bottom: 10px; /* Внутренний отступ снизу. */
	padding-left: 10px; /* Внутренний отступ слева. */
	
	box-sizing: border-box;
	box-sizing: content-box;

/*              ВИДИМОСТЬ               */
	overflow: visible; /* Контент, выходящий за границы элемента, отображается полностью (по умолчанию). */
	overflow: hidden; /* Контент, выходящий за границы элемента, скрыт и не виден. */
	overflow: scroll; /* Всегда показываются полосы прокрутки, независимо от необходимости прокрутки. */
	overflow: auto; /* Полосы прокрутки появляются только при необходимости (если контента больше, чем размер блока). */
	overflow-y: auto; /* Вертикальные полосы прокрутки появляются только при необходимости. */
	
/*              ШРИФТЫ              */
	font-family: Arial, sans-serif;
	
	font-size: 16px; /* Устанавливает размер шрифта в 16 пикселей. */
	font-size: 1em; /* Размер шрифта равен текущему размеру шрифта родительского элемента (обычно 16px по умолчанию). */
	font-size: 1rem; /* Размер шрифта равен корневому размеру шрифта документа (обычно 16px). */
	font-size: large; /* Относительный размер, чуть больше стандартного, зависит от браузера и настроек. */
	font-size: 200%; /* Размер шрифта в два раза больше текущего размера (например, если текущий 16px, то 32px). */
	
	font-weight: normal; /* обычная жирность */
	font-weight: bold; /* жирный шрифт */
	font-weight: 700; /* числовое значение жирности, обычно соответствует жирному */

	font-style: normal; /* обычный стиль */
	font-style: italic; /* курсив */

	font-variant: normal; /* стандартное написание */
	font-variant: small-caps; /* малые заглавные буквы */

	line-height: 1.5; /* межстрочный интервал в 1.5 раза от высоты строки */

	color: #333; /* темно-серый в шестнадцатеричном формате */
	color: rgb(100%, 100%, 100%); /* белый в процентах (эквивалент #fff) */
	color: rgb(255, 255, 255); /* белый в числовом формате */
	color: hsl(0, 100%, 50%); /* насыщенный красный по HSL модели */
	color: hsla(0, 100%, 50%, .5); /* полупрозрачный красный (50% прозрачности) */
	
	text-align: left; /* по левому краю */
	text-align: center; /* по центру */
	text-align: right; /* по правому краю */
	text-align: justify; /* по ширине (выравнивание по обеим сторонам) */
	
	text-decoration: none; /* без украшений */
	text-decoration: underline; /* подчеркивание */
	text-decoration: overline; /* надчеркивание (линия сверху) */
	text-decoration: underline overline; /* и подчеркивание, и надчеркивание одновременно */

	text-transform: none; /* без изменений регистра */
	text-transform: uppercase; /* все буквы в верхний регистр */
	text-transform: lowercase; /* все буквы в нижний регистр */
	text-transform: capitalize; /* первая буква каждого слова в верхний регистр */
	
	text-indent: 20px; /* сдвиг первой строки на 20 пикселей */

	letter-spacing: 1px; /* добавляет по 1 пикселю между символами */

	word-spacing: 2px; /* добавляет по 2 пикселя между словами */

	white-space: normal; /* стандартное поведение: переносит строки, сохраняет пробелы */
	white-space: nowrap; /* не переносит строки, весь текст в одну строку */
	white-space: pre; /* сохраняет все пробелы и переносы, как в исходном коде */

	word-break: normal; /* стандартное поведение, перенос слов по границам слов */
	word-break: break-all; /* позволяет переносить слова в любом месте при необходимости */
	word-break: keep-all; /* не переносит слова, только в случае автоматического переноса (обычно для неанглийских языков) */

	word-wrap: normal; /* стандартное поведение, не переносит слова за границы контейнера */
	word-wrap: break-word; /* позволяет переносить длинные слова на следующую строку при переполнении */

	hyphens: none; /* отключает автоматические дефисы при переносе слов */
	hyphens: manual; /* разрешает автоматические дефисы только там, где они явно указаны */
	hyphens: auto; /* включает автоматические дефисы для улучшения переноса (поддерживается браузерами) */

	text-overflow: ellipsis; /* добавляет "..." при переполнении текста (требует overflow и white-space) */

	text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* смещение тени на 1px по горизонтали и вертикали, размытие 2px, цвет полупрозрачный черный */

	direction: ltr; /* слева направо (по умолчанию для английского и большинства языков) */
	direction: rtl; /* справа налево (для арабского, иврита и др.) */

	unicode-bidi: normal; /* стандартное поведение без особого изменения порядка символов */

	/* ФОН */
	background-color: #fff; /* белый цвет фона */

	background-image: url("image.jpg"); /* изображение в качестве фона */
	background-image: linear-gradient(to top, black, white); /* градиент от черного к белому сверху вниз */

	background-repeat: no-repeat; /* изображение не повторяется */
	background-repeat: repeat-x; /* повтор по горизонтали (по оси X) */
	background-repeat: repeat-y; /* повтор по вертикали (по оси Y) */

	background-position: center; /* по центру элемента */
	background-position: 10px 20px; /* смещение на 10px по горизонтали и 20px по вертикали */

	background-size: cover; /* масштабирует изображение, чтобы покрыть весь блок, сохраняя пропорции */
	background-size: contain; /* масштабирует изображение, чтобы полностью поместиться внутри блока, сохраняя пропорции */
	background-size: 100px 50px; /* явно задает ширину и высоту изображения */

	background-attachment: scroll; /* фон прокручивается вместе со страницей (по умолчанию) */
	background-attachment: fixed; /* фон остается неподвижным при прокрутке (фиксированный) */

	background-clip: border-box; /* фон занимает всю область за границами блока */
	background-origin: padding-box; /* фон начинается от области внутреннего отступа */
	background-blend-mode: normal; /* стандартное смешивание без эффектов */
	
	/* ГРАНИЦЫ */
	border: 1px solid #000; /* сплошная черная граница толщиной 1px */

	border-width: 1px; /* толщина границы в 1 пиксель */
	border-style: solid; /* сплошная линия границы */
	border-style: dashed; /* пунктирная линия границы */
	border-style: dotted; /* точечная линия границы */

	border-color: #000; /* черный цвет границы */

	border-top: 1px solid #000;    /* верхняя граница */
	border-right: 1px solid #000;  /* правая граница */
	border-bottom: 1px solid #000; /* нижняя граница */
	border-left: 1px solid #000;   /* левая граница */

	border-radius: 5px; /* Скругление углов элемента */

	border-top-left-radius: 5px; /* Скругление верхнего левого угла */
	border-top-right-radius: 5px; /* Скругление верхнего правого угла */
	border-bottom-right-radius: 5px; /* Скругление правого нижнего угла */
	border-bottom-left-radius: 5px; /* Скругление левого нижнего угла */

	outline: 1px solid #f00; /* Обводка вокруг элемента */

	outline-offset: 2px; /* Смещение обводки относительно границы элемента */

	box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Тень вокруг элемента */

	/* СЕТКА */
	display: flex; /* Установка контейнера как флекс-контейнера */

	flex-direction: row; /* Расположение элементов по горизонтали (по умолчанию) */
	flex-direction: row-reverse; /* Расположение элементов по горизонтали в обратном порядке */
	flex-direction: column; /* Расположение элементов по вертикали */
	flex-direction: column-reverse; /* Расположение элементов по вертикали в обратном порядке */

	flex-wrap: nowrap; /* Элементы не переносятся на новую строку/столбец */
	flex-wrap: wrap; /* Элементы переносятся на новую строку/столбец при необходимости */
	flex-wrap: wrap-reverse; /* Перенос элементов в обратном порядке */

	justify-content: flex-start; /* Выравнивание элементов по началу основной оси */
	justify-content: flex-end; /* Выравнивание элементов по концу основной оси */
	justify-content: center; /* Центрирование элементов по основной оси */
	justify-content: space-between; /* Равномерное распределение с краями у крайних элементов */
	justify-content: space-around; /* Равномерное распределение с равными отступами вокруг элементов */
	justify-content: space-evenly; /* Равномерное распределение с равными промежутками между элементами */

	align-items: stretch; /* Растягивание элементов по поперечной оси (по умолчанию) */
	align-items: flex-start; /* Выравнивание элементов по началу поперечной оси */
	align-items: flex-end; /* Выравнивание элементов по концу поперечной оси */
	align-items: center; /* Центрирование элементов по поперечной оси */
	align-items: baseline; /* Выравнивание по базовой линии текста внутри элементов */

	align-content: stretch; /* Растягивание линий внутри многострочного флекс-контейнера (по умолчанию) */
	align-content: flex-start; /* Выравнивание линий у начала контейнера */
	align-content: flex-end; /* Выравнивание линий у конца контейнера */
	align-content: center; /* Центрирование линий внутри контейнера */
	align-content: space-between; /* Распределение линий с равными промежутками между ними */
	align-content: space-around; /* Распределение линий с равными промежутками вокруг них */
	
	order: 0; /* Порядок расположения элемента внутри flex или grid контейнера */

	flex-grow: 0; /* Элемент не будет расти, занимая доступное пространство */

	flex-shrink: 1; /* Элемент может сжиматься при нехватке места */

	flex-basis: auto; /* Исходный размер элемента перед распределением свободного пространства */

	align-self: auto; /* Выравнивание элемента по поперечной оси внутри flex-контейнера */

	gap: 10px; /* Расстояние между строками и колонками в контейнере */

	row-gap: 10px; /* Расстояние между строками (для grid или flex-контейнера) */

	column-gap: 10px; /* Расстояние между колонками (для grid или flex-контейнера) */

	display: grid; /* Установка элемента как grid-контейнера */
	
	grid-template-columns: 1fr 1fr 1fr; /* Три равные колонки по ширине */
	grid-template-rows: 100px 200px; /* Две строки с фиксированной высотой */
	grid-template-areas: "header header header"
											 "sidebar main main"; /* Области для позиционирования элементов */

	grid-column-gap: 10px; /* Расстояние между колонками */
	grid-row-gap: 10px; /* Расстояние между строками */

	gap: 10px; /* Общее расстояние между строками и колонками */

	grid-auto-columns: 1fr; /* Автоматическая ширина колонок при необходимости */
	grid-auto-rows: 100px; /* Автоматическая высота строк при необходимости */
	grid-auto-flow: row; /* Расположение элементов по строкам */

	grid-column-start: 1; /* Начальная колонка для элемента (если применяется к элементу внутри grid) */
	grid-column-end: 3; /* Конечная колонка для элемента (элемент занимает колонки с 1 по 2) */

	grid-row-start: 1; /* Начальная строка для элемента */
	grid-row-end: 3;   /* Конечная строка для элемента (занимает строки с 1 по 2) */

	grid-area: header; /* Назначение области для элемента, связанной с grid-template-areas */

	justify-items: start;   /* Выравнивание содержимого внутри ячейки по началу (по горизонтали) */
	justify-items: end;     /* Выравнивание содержимого внутри ячейки по концу (по горизонтали) */
	justify-items: center;  /* Центрирование содержимого внутри ячейки (по горизонтали) */
	justify-items: stretch; /* Растягивание содержимого на всю ширину ячейки (по горизонтали) */
	
	align-items: start;        /* Выравнивание по началу (по вертикали или горизонтали в зависимости от flex-direction) */
	align-items: end;          /* Выравнивание по концу */
	align-items: center;       /* Центрирование */
	align-items: stretch;      /* Растягивание элементов на всю высоту/ширину контейнера */
	place-items: center stretch; /* Одновременное указание для grid: центр по горизонтали, растяжение по вертикали */

	justify-content: start;        /* В начале (по основной оси) */
	justify-content: end;          /* В конце */
	justify-content: center;       /* Центрировать */
	justify-content: stretch;      /* Растягивать (обычно не применяется к justify-content) */
	justify-content: space-around; /* Равномерное распределение с отступами вокруг элементов */
	justify-content: space-between;/* Распределение с равными промежутками между элементами */
	justify-content: space-evenly; /* Равные промежутки между всеми элементами */

	align-content: start;        /* В начале линий */
	align-content: end;          /* В конце линий */
	align-content: center;       /* Центрирование линий */
	align-content: stretch;      /* Растягивание линий на всю доступную высоту/ширину контейнера */
	align-content: space-around; /* Равномерное распределение с отступами вокруг линий */
	align-content: space-between;/* Распределение с равными промежутками между линиями */
	align-content: space-evenly; /* Равные промежутки между линиями */

	place-items: center stretch; /* Центр по горизонтали, растяжение по вертикали */

	transform: translate(10px, 20px);   /* Смещение элемента на 10px вправо и 20px вниз */
	transform: rotate(45deg);     /* Поворот на 45 градусов */
	transform: scale(1.2);        /* Масштабирование элемента в 1.2 раза */
	transform: skew(10deg, 5deg); /* Искажение по осям X и Y */

	transform-origin: center;     /* Точка трансформации — центр элемента */

	transform-style: flat;        /* Уровень 3D трансформаций (обычно используется в контексте 3D) — 'flat' не является стандартным значением, правильное — 'flat' или 'preserve-3d' */

	transform-style: preserve-3d; /* Сохраняет 3D-пространство для дочерних элементов */

	backface-visibility: visible; /* Видимость задней стороны при вращении в 3D пространстве */

	backface-visibility: hidden;  /* Скрывает заднюю сторону при вращении в 3D пространстве */
	
	transition: all 0.3s ease; /* Общий переход для всех свойств с длительностью 0.3 секунды и функцией плавности ease */

	transition-property: opacity; /* Указывает, что переход применяется только к свойству opacity */
	
	transition-duration: 0.3s; /* Длительность перехода — 0.3 секунды */

	transition-timing-function: ease; /* Функция временной плавности — ease (плавное ускорение и замедление) */

	transition-timing-function: linear;       /* Линейный переход без ускорения */
	transition-timing-function: ease-in;      /* Плавное ускорение в начале */
	transition-timing-function: ease-out;     /* Плавное замедление в конце */
	transition-timing-function: ease-in-out;  /* Ускорение и замедление в середине */

	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); /* Пользовательская кривая Безье для более точного контроля */
 
	transition-delay: 0.1s;  /* Задержка перед началом перехода — 0.1 секунды */
	
	/* АНИМАЦИЯ */
	animation: slide 2s ease infinite;

	animation-name: slide; /* Название анимации (может быть использовано отдельно) */
	animation-duration: 2s; /* Длительность анимации — 2 секунды */
	animation-timing-function: ease; /* Функция временной плавности анимации */
	animation-delay: 0s; /* Задержка перед началом анимации — 0 секунд */
	animation-iteration-count: infinite; /* Количество повторений анимации — бесконечно */
	animation-iteration-count: 3; /* Альтернативное значение количества повторений — 3 раза (будет применено, если раскомментировать или убрать 'infinite') */

	animation-direction: normal;           /* Воспроизведение в обычном порядке */
	animation-direction: reverse;          /* Воспроизведение в обратном порядке */
	animation-direction: alternate;        /* Переключение между нормальным и обратным при каждом цикле */
	animation-direction: alternate-reverse;/* Обратное чередование по сравнению с 'alternate' */

	animation-fill-mode: none;     /* Не сохранять состояние после окончания */
	animation-fill-mode: forwards; /* Сохранять конечное состояние после завершения */
	animation-fill-mode: backwards;/* Использовать начальное состояние до начала анимации */
	animation-fill-mode: both;     /* Комбинация 'forwards' и 'backwards' */

	animation-play-state: running; /* Анимация запущена и воспроизводится */
	animation-play-state: paused;  /* Анимация приостановлена (по умолчанию) */

	cursor: pointer;        /* Указатель в виде руки, обычно для кликабельных элементов */
	cursor: help;           /* В виде вопросительного знака, для подсказок */
	cursor: wait;           /* Индикатор ожидания (часики или кружок) */
	cursor: not-allowed;    /* Запрет на взаимодействие (запрещённый символ) */

	opacity: 0.5;           /* Полупрозрачный элемент (50%) */

	visibility: visible;    /* Элемент видим */
	visibility: hidden;     /* Элемент скрыт, но занимает место в разметке */

	display: none;          /* Элемент полностью скрыт и не занимает места */
	display: block;         /* Блочный элемент, занимает всю ширину контейнера */
	display: inline;       /* Встроенный элемент, занимает только необходимую ширину */
	display: inline-block; /* Встроенно-блочный, позволяет задавать размеры и позиционирование */
	display: contents;     /* Отрисовывает только содержимое без собственного блока (редко используется) */
	display: list-item;    /* Элемент списка с маркером */

	float: left;          /* Прижать к левому краю контейнера */
	float: right;         /* Прижать к правому краю контейнера */
	float: none;          /* Отменить float, вернуть в поток документа */
	
	clear: both; /* Очистка float-элементов, сброс обтекания */

	object-fit: cover;     /* Заполняет контейнер, сохраняя пропорции, может обрезать часть изображения */
	object-fit: contain;   /* Вписывает изображение полностью в контейнер, сохраняя пропорции */
	object-position: center; /* Центрирование объекта внутри контейнера */

	resize: both;          /* Позволяет изменять как по горизонтали, так и по вертикали */
	resize: horizontal;    /* Только по горизонтали */
	resize: vertical;      /* Только по вертикали */

	clip-path: circle(50%); /* Обрезает элемент в виде круга с радиусом 50% */
	
	will-change: transform; /* Предварительное указание браузеру, что элемент может измениться (оптимизация) */
	
/*ФИЛЬТРЫ*/
	filter: blur(5px);             /* Размытие изображения на 5 пикселей */
	filter: brightness(1.2);       /* Увеличение яркости на 20% */
	filter: contrast(1.5);         /* Повышение контраста на 50% */
	filter: grayscale(50%);        /* Половина изображения в оттенках серого */
	filter: hue-rotate(90deg);     /* Поворот цветового оттенка на 90 градусов */
	filter: invert(100%);          /* Инверсия цветов (цвета меняются местами) */
	filter: opacity(50%);          /* Полупрозрачность (50%) */
	filter: saturate(200%);        /* Увеличение насыщенности цветов в два раза */
	filter: sepia(100%);           /* Полностью сепия-эффект (старинный фотоэффект) */
}
	
@media screen and (min-width: 768px) {
  /* Здесь пишите стили, применяемые при ширине экрана >= 768px */
}

@media (prefers-color-scheme: dark) {
  /* Здесь стили для тёмной темы */
}
	
@media (orientation: portrait) {
  /* Здесь стили, применяемые при вертикальной ориентации экрана */
}

:root {
	--primary-color: #3498db;
	--spacing: 16px;
}
.element {
	color: var(--primary-color);
	margin: var(--spacing);
}

@font-face {
font-family: 'League Gothic';
src: url('fonts/League_Gothic-webfont.eot');
src: url('fonts/League_Gothic-webfont.eot?#iefix') format('embeddedopentype'),
url('fonts/League_Gothic-webfont.woff2') format('woff2'),
url('fonts/League_Gothic-webfont.woff') format('woff'),
url('fonts/League_Gothic-webfont.ttf') format('truetype'),
url('fonts/League_Gothic-webfont.svg') format('svg');
}

h1 {
font-family: 'League Gothic';
font-weight: normal;
font-style: normal;
}

/*NORMALIZE*/
html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
	display: block;
}
body {
	line-height: 1.2;
}
ol {
	padding-left: 1.4em;
	list-style: decimal;
}
ul {
	padding-left: 1.4em list-style: square;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}