* {}

.class {}

#id {}

div p {} /* Все p внутри div */

div > p {} /* p прямые потомки div */

div + p {} /* p сразу после div */

div ~ p {} /* Все p после div */

a[title] {} /* выбирает все элементы <a>, у которых есть атрибут title */

a[href="https://example.com"] {} /* выбирает все элементы <a>, у которых атрибут href точно равен "https://example.com" */

a[href^="https"] {} /* Начинается с div[class^="icon-"] {}*/

a[href$=".pdf"] {} /* Заканчивается на div[class$="-btn"] {}*/

a[href*="example"] {} /* Содержит div[class*="error"] {}*/

:link {} /* выбирает все ссылки, которые еще не были посещены пользователем */
:visited {} /* выбирает все ссылки, которые пользователь уже посетил */
:hover {} /* применяется, когда пользователь наводит курсор мыши на элемент */
:active {} /* активное состояние элемента при нажатии (например, при клике) */
:focus {} /* применяется, когда элемент получает фокус (например, при навигации с клавиатуры) */
:focus-visible {} /* применяется, когда элемент в фокусе и это видно пользователю (например, при навигации с клавиатуры) */
:focus-within {} /* выбирает элементы, внутри которых есть элемент с фокусом */
:target {} /* применяется к элементу, который является текущей целью URL после перехода по якорю */

:first-child {} /* выбирает первый дочерний элемент внутри родителя */  
:last-child {} /* выбирает последний дочерний элемент внутри родителя */  
:first-of-type {} /* выбирает первый элемент определённого типа среди братьев */  
:last-of-type {} /* выбирает последний элемент определённого типа среди братьев */  
:only-child {} /* выбирает элемент, который является единственным ребёнком своего родителя */  
:only-of-type {} /* выбирает элемент, который является единственным своего типа среди братьев */  
:nth-child(2) {} /* выбирает второй дочерний элемент родителя */  
:nth-child(odd) {} /* выбирает нечётные дочерние элементы (1-й, 3-й, 5-й и т.д.) */  
:nth-child(even) {} /* выбирает чётные дочерние элементы (2-й, 4-й, 6-й и т.д.) */  
:nth-child(3n+1) {} /* выбирает элементы по формуле: каждый третий начиная с первого (1-й, 4-й, 7-й и т.д.) */  
:nth-last-child(2) {} /* выбирает предпоследний дочерний элемент (считая с конца) */  
:nth-of-type(2) {} /* выбирает второй элемент определённого типа среди братьев */  
:nth-last-of-type(2) {} /* выбирает предпоследний элемент определённого типа среди братьев */  
:not(.ignore) {} /* выбирает все элементы, у которых нет класса 'ignore' */  
div:not(#banner) {} /* выбирает все `<div>`, кроме тех, у которых есть id 'banner' */  
li:not(:first-child) {} /* выбирает все `<li>`, кроме первого ребенка в списке */  
:empty {} /* выбирает элементы без содержимого (без текста и детей) */  
:root {} /* ***выбирает корневой элемент документа (обычно `<html>`)*** */

:checked {} /* выбирает элементы формы, которые отмечены (например, чекбоксы или радиокнопки, отмеченные пользователем) */  
:disabled {} /* выбирает элементы формы, которые отключены и недоступны для взаимодействия */  
:enabled {} /* выбирает элементы формы, которые доступны для взаимодействия */  
:required {} /* выбирает обязательные для заполнения элементы формы */  
:optional {} /* выбирает необязательные для заполнения элементы формы */  
:valid {} /* выбирает элементы формы с валидным содержимым */  
:invalid {} /* выбирает элементы формы с некорректным содержимым */  
:in-range {} /* выбирает элементы формы с значением в допустимом диапазоне (например, input type=range или number) */  
:out-of-range {} /* выбирает элементы формы с значением вне допустимого диапазона */  
:placeholder-shown {} /* выбирает поля ввода, у которых отображается плейсхолдер */  
:read-only {} /* выбирает элементы формы, которые доступны только для чтения */  
:read-write {} /* выбирает элементы формы, которые доступны для редактирования */

::before {
	content: "";
} /* добавляет содержимое перед элементом, используется для стилизации псевдоэлемента ::before */  
::after {
	content: "";
} /* добавляет содержимое после элемента, используется для стилизации псевдоэлемента ::after */  
::first-letter {} /* выбирает первую букву внутри элемента для стилизации */  
::first-line {} /* выбирает первую строку внутри элемента для стилизации */  
::selection {} /* стилизует выделенный текст пользователем */  
::marker {} /* выбирает маркеры списков (например, точки или номера) */  
::placeholder {} /* стилизует текст плейсхолдера в полях формы */

.a {
	position: static; /* Значение по умолчанию. Элемент располагается в нормальном потоке документа. */
	position: relative; /* Позволяет смещать элемент относительно его исходного положения, сохраняя место в потоке. */
	position: absolute; /* Располагает элемент относительно ближайшего позиционированного предка (с отличным от static position). */
	position: fixed; /* Фиксирует элемент относительно окна браузера; он остается на месте при прокрутке страницы. */
	position: sticky; /* Позволяет элементу вести себя как `relative` до тех пор, пока не достигнет заданного порога, после чего — как `fixed`. */
	
	top: 0; /* Смещает элемент вверх относительно его позиционирования (например, при position: absolute или fixed). */
	right: 0; /* Смещает элемент вправо. */
	bottom: 0; /* Смещает элемент вниз. */
	left: 0; /* Смещает элемент влево. */
	z-index: 10; /* Определяет порядок наложения элементов; чем больше значение, тем выше слой. */

	width: 100px; /* Устанавливает фиксированную ширину элемента в 100 пикселей. */
	height: 100px; /* Устанавливает фиксированную высоту в 100 пикселей. */

	min-width: 50px; /* Минимальная ширина элемента — не меньше 50 пикселей. */
	max-width: 200px; /* Максимальная ширина — не больше 200 пикселей. */
	min-height: 50px; /* Минимальная высота — не меньше 50 пикселей. */
	max-height: 200px; /* Максимальная высота — не больше 200 пикселей. */

	margin: 10px; /* Внешний отступ со всех сторон по 10 пикселей. */
	margin-top: 10px; /* Внешний отступ сверху. */
	margin-right: 10px; /* Внешний отступ справа. */
	margin-bottom: 10px; /* Внешний отступ снизу. */
	margin-left: 10px; /* Внешний отступ слева. */

	padding: 10px; /* Внутренний отступ со всех сторон по 10 пикселей. */
	padding-top: 10px; /* Внутренний отступ сверху. */
	padding-right: 10px; /* Внутренний отступ справа. */
	padding-bottom: 10px; /* Внутренний отступ снизу. */
	padding-left: 10px; /* Внутренний отступ слева. */
	
	box-sizing: border-box;
	box-sizing: content-box;
	
	overflow: visible; /* Контент, выходящий за границы элемента, отображается полностью (по умолчанию). */
	overflow: hidden; /* Контент, выходящий за границы элемента, скрыт и не виден. */
	overflow: scroll; /* Всегда показываются полосы прокрутки, независимо от необходимости прокрутки. */
	overflow: auto; /* Полосы прокрутки появляются только при необходимости (если контента больше, чем размер блока). */
	overflow-x: hidden; /* Горизонтальная прокрутка скрыта; содержимое по горизонтали обрезается. */
	overflow-y: auto; /* Вертикальные полосы прокрутки появляются только при необходимости. */

	font-family: Arial, sans-serif;
	
	font-size: 16px; /* Устанавливает размер шрифта в 16 пикселей. */
	font-size: 1em; /* Размер шрифта равен текущему размеру шрифта родительского элемента (обычно 16px по умолчанию). */
	font-size: 1rem; /* Размер шрифта равен корневому размеру шрифта документа (обычно 16px). */
	font-size: large; /* Относительный размер, чуть больше стандартного, зависит от браузера и настроек. */
	font-size: 200%; /* Размер шрифта в два раза больше текущего размера (например, если текущий 16px, то 32px). */
	
	/* Жирность шрифта */
	font-weight: normal; /* обычная жирность */
	font-weight: bold; /* жирный шрифт */
	font-weight: 700; /* числовое значение жирности, обычно соответствует жирному */

	/* Стиль шрифта */
	font-style: normal; /* обычный стиль */
	font-style: italic; /* курсив */

	/* Вариант написания текста */
	font-variant: normal; /* стандартное написание */
	font-variant: small-caps; /* малые заглавные буквы */

	/* Межстрочный интервал */
	line-height: 1.5; /* межстрочный интервал в 1.5 раза от высоты строки */

	/* Цвет текста, можно использовать разные форматы */
	color: #333; /* темно-серый в шестнадцатеричном формате */
	color: rgb(100%, 100%, 100%); /* белый в процентах (эквивалент #fff) */
	color: rgb(255, 255, 255); /* белый в числовом формате */
	color: hsl(0, 100%, 50%); /* насыщенный красный по HSL модели */
	color: hsla(0, 100%, 50%, .5); /* полупрозрачный красный (50% прозрачности) */

	/* Выравнивание текста по горизонтали */
	text-align: left; /* по левому краю */
	text-align: center; /* по центру */
	text-align: right; /* по правому краю */
	text-align: justify; /* по ширине (выравнивание по обеим сторонам) */

	/* Украшения текста (подчеркивание, надчеркивание и т.д.) */
	text-decoration: none; /* без украшений */
	text-decoration: underline; /* подчеркивание */
	text-decoration: overline; /* надчеркивание (линия сверху) */
	text-decoration: underline overline; /* и подчеркивание, и надчеркивание одновременно */

	/* Преобразование регистра текста */
	text-transform: none; /* без изменений регистра */
	text-transform: uppercase; /* все буквы в верхний регистр */
	text-transform: lowercase; /* все буквы в нижний регистр */
	text-transform: capitalize; /* первая буква каждого слова в верхний регистр */
	
	/* Отступ первой строки текста */
	text-indent: 20px; /* сдвиг первой строки на 20 пикселей */

	/* Расстояние между буквами */
	letter-spacing: 1px; /* добавляет по 1 пикселю между символами */

	/* Расстояние между словами */
	word-spacing: 2px; /* добавляет по 2 пикселя между словами */

	/* Управление переносом и пробелами внутри текста */
	white-space: normal; /* стандартное поведение: переносит строки, сохраняет пробелы */
	white-space: nowrap; /* не переносит строки, весь текст в одну строку */
	white-space: pre; /* сохраняет все пробелы и переносы, как в исходном коде */

	/* Разбитие слов при переносе */
	word-break: normal; /* стандартное поведение, перенос слов по границам слов */
	word-break: break-all; /* позволяет переносить слова в любом месте при необходимости */
	word-break: keep-all; /* не переносит слова, только в случае автоматического переноса (обычно для неанглийских языков) */

	/* Обертка текста при переполнении контейнера */
	word-wrap: normal; /* стандартное поведение, не переносит слова за границы контейнера */
	word-wrap: break-word; /* позволяет переносить длинные слова на следующую строку при переполнении */

	/* Управление разрывом слов с помощью дефисов (hyphenation) */
	hyphens: none; /* отключает автоматические дефисы при переносе слов */
	hyphens: manual; /* разрешает автоматические дефисы только там, где они явно указаны */
	hyphens: auto; /* включает автоматические дефисы для улучшения переноса (поддерживается браузерами) */

	/* Обрезка текста с добавлением многоточия при переполнении контейнера */
	text-overflow: ellipsis; /* добавляет "..." при переполнении текста (требует overflow и white-space) */

	/* Тень текста для создания эффекта глубины или выделения */
	text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* смещение тени на 1px по горизонтали и вертикали, размытие 2px, цвет полупрозрачный черный */

	/* Направление текста (для языков справа налево или слева направо) */
	direction: ltr; /* слева направо (по умолчанию для английского и большинства языков) */
	direction: rtl; /* справа налево (для арабского, иврита и др.) */

	/* Управление порядком отображения символов в двоичной системе письма (например, для языков с особым порядком) */
	unicode-bidi: normal; /* стандартное поведение без особого изменения порядка символов */

	/* Цвет фона элемента */
	background-color: #fff; /* белый цвет фона */

	/* Фоновое изображение или градиент */
	background-image: url("image.jpg"); /* изображение в качестве фона */
	background-image: linear-gradient(to top, black, white); /* градиент от черного к белому сверху вниз */

	/* Повторение фонового изображения */
	background-repeat: no-repeat; /* изображение не повторяется */
	background-repeat: repeat-x; /* повтор по горизонтали (по оси X) */
	background-repeat: repeat-y; /* повтор по вертикали (по оси Y) */

	/* Положение фонового изображения внутри элемента */
	background-position: center; /* по центру элемента */
	background-position: 10px 20px; /* смещение на 10px по горизонтали и 20px по вертикали */

	/* Размер фонового изображения */
	background-size: cover; /* масштабирует изображение, чтобы покрыть весь блок, сохраняя пропорции */
	background-size: contain; /* масштабирует изображение, чтобы полностью поместиться внутри блока, сохраняя пропорции */
	background-size: 100px 50px; /* явно задает ширину и высоту изображения */

	/* Поведение фона при прокрутке страницы */
	background-attachment: scroll; /* фон прокручивается вместе со страницей (по умолчанию) */
	background-attachment: fixed; /* фон остается неподвижным при прокрутке (фиксированный) */

	/* Область, в пределах которой отображается фон (для границ блока) */
	background-clip: border-box; /* фон занимает всю область за границами блока */

	<!-- Область происхождения фона (откуда начинается позиционирование) -->
	background-origin: padding-box; /* фон начинается от области внутреннего отступа */

	<!-- Режим смешивания фона с содержимым -->
	background-blend-mode: normal; /* стандартное смешивание без эффектов */

	<!-- Граница элемента -->
	border: 1px solid #000; /* сплошная черная граница толщиной 1px */

	<!-- Разделение границы на части -->
	border-width: 1px; /* толщина границы в 1 пиксель */
	border-style: solid; /* сплошная линия границы */
	border-style: dashed; /* пунктирная линия границы */
	border-style: dotted; /* точечная линия границы */

	<!-- Цвет границы -->
	border-color: #000; /* черный цвет границы */

	/* Каждая сторона отдельно для более точного управления */
	border-top: 1px solid #000;    /* верхняя граница */
	border-right: 1px solid #000;  /* правая граница */
	border-bottom: 1px solid #000; /* нижняя граница */
	border-left: 1px solid #000;   /* левая граница */

	border-radius: 5px; /* Скругление углов элемента */

	border-top-left-radius: 5px; /* Скругление верхнего левого угла */
	border-top-right-radius: 5px; /* Скругление верхнего правого угла */
	border-bottom-right-radius: 5px; /* Скругление правого нижнего угла */
	border-bottom-left-radius: 5px; /* Скругление левого нижнего угла */

	outline: 1px solid #f00; /* Обводка вокруг элемента */

	outline-offset: 2px; /* Смещение обводки относительно границы элемента */

	box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); /* Тень вокруг элемента */

	display: flex; /* Установка контейнера как флекс-контейнера */

	flex-direction: row; /* Расположение элементов по горизонтали (по умолчанию) */
	flex-direction: row-reverse; /* Расположение элементов по горизонтали в обратном порядке */
	flex-direction: column; /* Расположение элементов по вертикали */
	flex-direction: column-reverse; /* Расположение элементов по вертикали в обратном порядке */

	flex-wrap: nowrap; /* Элементы не переносятся на новую строку/столбец */
	flex-wrap: wrap; /* Элементы переносятся на новую строку/столбец при необходимости */
	flex-wrap: wrap-reverse; /* Перенос элементов в обратном порядке */

	justify-content: flex-start; /* Выравнивание элементов по началу основной оси */
	justify-content: flex-end; /* Выравнивание элементов по концу основной оси */
	justify-content: center; /* Центрирование элементов по основной оси */
	justify-content: space-between; /* Равномерное распределение с краями у крайних элементов */
	justify-content: space-around; /* Равномерное распределение с равными отступами вокруг элементов */
	justify-content: space-evenly; /* Равномерное распределение с равными промежутками между элементами */

	align-items: stretch; /* Растягивание элементов по поперечной оси (по умолчанию) */
	align-items: flex-start; /* Выравнивание элементов по началу поперечной оси */
	align-items: flex-end; /* Выравнивание элементов по концу поперечной оси */
	align-items: center; /* Центрирование элементов по поперечной оси */
	align-items: baseline; /* Выравнивание по базовой линии текста внутри элементов */

	align-content: stretch; /* Растягивание линий внутри многострочного флекс-контейнера (по умолчанию) */
	align-content: flex-start; /* Выравнивание линий у начала контейнера */
	align-content: flex-end; /* Выравнивание линий у конца контейнера */
	align-content: center; /* Центрирование линий внутри контейнера */
	align-content: space-between; /* Распределение линий с равными промежутками между ними */
	align-content: space-around; /* Распределение линий с равными промежутками вокруг них */
	
	order: 0; /* Порядок расположения элемента внутри flex или grid контейнера */

	flex-grow: 0; /* Элемент не будет расти, занимая доступное пространство */

	flex-shrink: 1; /* Элемент может сжиматься при нехватке места */

	flex-basis: auto; /* Исходный размер элемента перед распределением свободного пространства */

	align-self: auto; /* Выравнивание элемента по поперечной оси внутри flex-контейнера */

	gap: 10px; /* Расстояние между строками и колонками в контейнере */

	row-gap: 10px; /* Расстояние между строками (для grid или flex-контейнера) */

	column-gap: 10px; /* Расстояние между колонками (для grid или flex-контейнера) */

	display: grid; /* Установка элемента как grid-контейнера */
	
	grid-template-columns: 1fr 1fr 1fr; /* Три равные колонки по ширине */
	grid-template-rows: 100px 200px; /* Две строки с фиксированной высотой */
	grid-template-areas: "header header header"
											 "sidebar main main"; /* Области для позиционирования элементов */

	grid-column-gap: 10px; /* Расстояние между колонками */
	grid-row-gap: 10px; /* Расстояние между строками */

	gap: 10px; /* Общее расстояние между строками и колонками */

	grid-auto-columns: 1fr; /* Автоматическая ширина колонок при необходимости */
	grid-auto-rows: 100px; /* Автоматическая высота строк при необходимости */
	grid-auto-flow: row; /* Расположение элементов по строкам */

	grid-column-start: 1; /* Начальная колонка для элемента (если применяется к элементу внутри grid) */
	grid-column-end: 3;   /* Конечная колонка для элемента (элемент занимает колонки с 1 по 2) */

	grid-row-start: 1; /* Начальная строка для элемента */
	grid-row-end: 3;   /* Конечная строка для элемента (занимает строки с 1 по 2) */

	grid-area: header; /* Назначение области для элемента, связанной с grid-template-areas */

	justify-items: start;    /* Выравнивание содержимого внутри ячейки по началу (по горизонтали) */
	justify-items: end;      /* Выравнивание содержимого внутри ячейки по концу (по горизонтали) */
	justify-items: center;   /* Центрирование содержимого внутри ячейки (по горизонтали) */
	justify-items: stretch;  /* Растягивание содержимого на всю ширину ячейки (по горизонтали) */
	
	align-items: start;
	align-items: end;
	align-items: center;
	align-items: stretch;
	place-items: center stretch;
	
	justify-content: start;
	justify-content: end;
	justify-content: center;
	justify-content: stretch;
	justify-content: space-around;
	justify-content: space-between;
	justify-content: space-evenly;
	
	align-content: start;
	align-content: end;
	align-content: center;
	align-content: stretch;
	align-content: space-around;
	align-content: space-between;
	align-content: space-evenly;
	place-content: space-between center;

	transform: translate(10px, 20px);
	transform: rotate(45deg);
	transform: scale(1.2);
	transform: skew(10deg, 5deg);
	transform-origin: center;
	transform-style: flat;
	transform-style: preserve-3d;
	backface-visibility: visible;
	backface-visibility: hidden;

	transition: all 0.3s ease;
	transition-property: opacity;
	transition-duration: 0.3s;
	transition-timing-function: ease;
	transition-timing-function: linear;
	transition-timing-function: ease-in;
	transition-timing-function: ease-out;
	transition-timing-function: ease-in-out;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-delay: 0.1s;

	animation: slide 2s ease infinite;
	animation-name: slide;
	animation-duration: 2s;
	animation-timing-function: ease;
	animation-delay: 0s;
	animation-iteration-count: infinite;
	animation-iteration-count: 3;
	animation-direction: normal;
	animation-direction: reverse;
	animation-direction: alternate;
	animation-direction: alternate-reverse;
	animation-fill-mode: none;
	animation-fill-mode: forwards;
	animation-fill-mode: backwards;
	animation-fill-mode: both;
	animation-play-state: running;
	animation-play-state: paused;

	cursor: pointer;
	cursor: help;
	cursor: wait;
	cursor: not-allowed;
	
	opacity: 0.5;
	
	visibility: visible;
	visibility: hidden;
	
	display: none;
	display: block;
	display: inline;
	display: inline-block;
	display: contents;
	display: list-item;
	
	float: left;
	float: right;
	float: none;
	
	clear: both;
	
	object-fit: cover;
	object-fit: contain;
	object-position: center;
	
	resize: both;
	resize: horizontal;
	resize: vertical;
	
	clip-path: circle(50%);
	
	will-change: transform;
	
	filter: blur(5px);
	filter: brightness(1.2);
	filter: contrast(1.5);
	filter: grayscale(50%);
	filter: hue-rotate(90deg);
	filter: invert(100%);
	filter: opacity(50%);
	filter: saturate(200%);
	filter: sepia(100%);
}
@media screen and (min-width: 768px) {
}
@media (prefers-color-scheme: dark) {
}
@media (orientation: portrait) {
}

:root {
	--primary-color: #3498db;
	--spacing: 16px;
}
.element {
	color: var(--primary-color);
	margin: var(--spacing);
}

@font-face {
font-family: 'League Gothic';
src: url('fonts/League_Gothic-webfont.eot');
src: url('fonts/League_Gothic-webfont.eot?#iefix') format('embeddedopentype'),
url('fonts/League_Gothic-webfont.woff2') format('woff2'),
url('fonts/League_Gothic-webfont.woff') format('woff'),
url('fonts/League_Gothic-webfont.ttf') format('truetype'),
url('fonts/League_Gothic-webfont.svg') format('svg');
}

h1 {
font-family: 'League Gothic';
font-weight: normal;
font-style: normal;
}

/*NORMALIZE*/
html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
	display: block;
}
body {
	line-height: 1.2;
}
ol {
	padding-left: 1.4em;
	list-style: decimal;
}
ul {
	padding-left: 1.4em list-style: square;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}